---
title: 'HelpTile'
url: 'http://helptile.com'
isSingle: true
isDraft: false
_content: false
---

extends ../views/_single

block content

  :marked
    When life gives you oppportunities, make the most of them! [HelpTile](http://helptile.com) is a Flagstaff, Arizona start-up company. The chief product is a Google Chrome-based browser extension that gives users the power to be specific when they share Internet content with friends.

    ![Demonstration of publishing a Tile with HelpTile](/img/helptile.gif)

    The extension is used to point-to, or "tag", the parts of a webpage that matter most. Users share a URL with others which not only goes back to the tagged webpage -- once we land on the webpage, the user is immediately taken to the specific image or paragraph (or sentence, or word...it's quite granular).

    During my six months with the HelpTile crew, I wore a lot of hats. As the first full-time employee, after the three founders, I had major input on the Product Design and Front-end Development.

    As a Designer, I translated the goals generated by our weekly sprints into pencil-and-paper designs. These designs were reviewed, modified, and eventually taken to digital wireframes. I had the pleasure of working with [Tommy O'Connor](http://madewithmath.com) who acted as Lead Designer and mentor to me.

    With detailed wireframe/mockups in hand, I returned to the Developer's Cave. [Darryl Brown](http://www.darrylivanbrown.com) guided the other devs and myself into the wonderful world of modern Javascript of NPM libraries, asynchronisity, and general hacking goodness.

    Every project can allow for one new technology, and I was excited about the prospect of [React](https://facebook.github.io/react/). This library saved the day for our state-heavy extension. Styles were written in [SASS](http://sass-lang.com) and we implemented Grunt to take care of all the file watching and task-running. I even got around to writing functional tests (using [Mocha](https://mochajs.org/) / [Jasmine](https://jasmine.github.io/)) which simulated user interactions in multiple browser environments. Behind the scenes, our application communicated with a REST-ful API maintained in PHP.

